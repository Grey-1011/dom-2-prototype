{"version":3,"sources":["jquery.js"],"names":["window","$","jQuery","selectorOrArrayOrTemplate","elements","createElement","document","querySelectorAll","selectorOrArray","Array","string","container","innerHTML","trim","content","firstChild","api","Object","create","prototype","assign","oldApi","fn","constructor","get","index","appendTo","node","Element","each","appendChild","el","append","children","HTMLCollection","i","length","addClass","className","classList","add","find","selector","array","elements2","from","concat","call","parent","indexOf","parentNode","push","print","console","log","end"],"mappings":"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","file":"jquery.f6a56818.map","sourceRoot":"..\\src","sourcesContent":["window.$ = window.jQuery = function (selectorOrArrayOrTemplate) {\r\n    let elements\r\n    if (typeof selectorOrArrayOrTemplate === 'string') {\r\n        if (selectorOrArrayOrTemplate[0] === '<') {\r\n            //创建div\r\n            elements = [createElement(selectorOrArrayOrTemplate)]\r\n        } else {\r\n            // 查找div\r\n            elements = document.querySelectorAll(selectorOrArrayOrTemplate)\r\n        }\r\n    } else if (selectorOrArray instanceof Array) {\r\n        elements = selectorOrArray\r\n    }\r\n    function createElement(string) {\r\n        const container = document.createElement('template')\r\n        container.innerHTML = string.trim()\r\n        return container.content.firstChild\r\n    }\r\n\r\n    const api = Object.create(jQuery.prototype)// 创建一个对象，这个对象的__proto__为括号里的东西\r\n    // 等价于 const aip = {__proto__:jQuery.prototype}\r\n    Object.assign(api, {\r\n        elements: elements,\r\n        oldApi: selectorOrArrayOrTemplate.oldApi\r\n    })\r\n    // api.elements = elements\r\n    // api.oldApi = selectorOrArrayOrTemplate.oldApi\r\n    return api\r\n};\r\n\r\n\r\njQuery.fn = jQuery.prototype = {\r\n    constructor: jQuery,\r\n    jQuery: true,\r\n    get(index) {\r\n        return this.elements[index]\r\n    },\r\n    appendTo(node) {\r\n        if (node instanceof Element) {\r\n            this.each(el => node.appendChild(el))//遍历elements,对每个el,进行node.appendChild 操作\r\n        } else if (node.jQuery === true) {\r\n            this.each(el => node.get(0).appendChild(el))// 遍历elements,对每个el,进行node.get(0).appendChild(el) 操作\r\n        }\r\n    },\r\n    append(children) {\r\n        if (children instanceof Element) {\r\n            this.get(0).appendChild(children)\r\n        } else if (children instanceof HTMLCollection) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                this.get(0).appendChild(children[i])\r\n            }\r\n        } else if (children.jQuery === true) {\r\n            children.each(node => this.get(0).appendChild(node))\r\n        }\r\n    },\r\n    // 闭包： 函数访问外部变量\r\n    addClass(className) {\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].classList.add(className) // 遍历elements 给每个el添加className\r\n        }\r\n        return this  // this就是api\r\n    },\r\n    find(selector) {\r\n        let array = []\r\n        for (let i = 0; i < elements.length; i++) {\r\n            const elements2 = Array.from(this.elements[i].querySelectorAll(selector))\r\n            array = array.concat(elements2)\r\n        }\r\n        array.oldApi = this // this 就是 旧api\r\n        return jQuery(array) // const newApi = jQuery(array) return newApi\r\n    },\r\n    each(fn) {\r\n        for (let i = 0; i < elements.length; i++) {\r\n            fn.call(null, elements[i], i)\r\n        }\r\n        return this // this 就是api 对象\r\n    },\r\n    parent() {\r\n        const array = []\r\n        this.each((node) => {\r\n            if (array.indexOf(node.parentNode) === -1) {\r\n                array.push(node.parentNode)\r\n            }\r\n        })\r\n        return jQuery(array)\r\n    },\r\n    children() {\r\n        const array = []\r\n        this.each((node) => {\r\n            array.push(...node.children) // 展开操作符 ...\r\n        })\r\n        return jQuery(array)\r\n    },\r\n    print() {\r\n        console.log(elements)\r\n    },\r\n    end() {\r\n        return this.oldApi // this 是 新api\r\n    }\r\n}\r\n"]}